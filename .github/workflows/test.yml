name: Test

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  pytest:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install --upgrade \
            -r requirements.txt \
            -r requirements*dev.txt;

      - name: Run Pytest
        env:
          # The hostname used to communicate with the PostgreSQL service container
          TEST_POSTGRES_HOST: localhost
          TEST_POSTGRES_PORT: 5432
          TEST_POSTGRES_USER: "postgres"
          TEST_POSTGRES_PASSWORD: "postgres"
          TEST_POSTGRES_DBNAME: "postgres"
          TEST_POSTGRES_SCHEMA: "omopcdm"
          # Include integration tests
          CDM_SOURCE_NAME: "FAKE DATA SOURCE"
          CDM_SOURCE_ABBREVIATION: "FDS"
          CDM_HOLDER: "FAKE DATA HOLDER"
          SOURCE_RELEASE_DATE: "1700-01-01"
          CDM_ETL_REFERENCE: "FAKE CDM ETL REFERENCE"
        run: |
          export PYTHONPATH=src
          pytest -rA
